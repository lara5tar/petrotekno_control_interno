import { test, expect } from '@playwright/test';

test.describe('Navegaci√≥n Sistema Petrotekno', () => {

    test('Entrar al sistema y explorar m√≥dulos principales', async ({ page }) => {
        console.log('üöÄ Iniciando sesi√≥n en el sistema...');

        // Login exitoso
        await page.goto('/login');
        await page.fill('input[name="email"]', 'admin@petrotekno.com');
        await page.fill('input[name="password"]', 'password');
        await page.click('button[type="submit"]');
        await page.waitForLoadState('networkidle');

        console.log('‚úÖ Login exitoso! URL actual:', page.url());
        await page.screenshot({ path: 'dashboard-principal.png', fullPage: true });

        // Explorar veh√≠culos
        console.log('üöó Navegando a m√≥dulo de veh√≠culos...');
        await page.goto('/vehiculos');
        await page.waitForLoadState('networkidle');
        console.log('üìç Veh√≠culos URL:', page.url());
        await page.screenshot({ path: 'modulo-vehiculos.png', fullPage: true });

        // Explorar obras
        console.log('üèóÔ∏è Navegando a m√≥dulo de obras...');
        await page.goto('/obras');
        await page.waitForLoadState('networkidle');
        console.log('üìç Obras URL:', page.url());
        await page.screenshot({ path: 'modulo-obras.png', fullPage: true });

        // Explorar personal
        console.log('üë• Navegando a m√≥dulo de personal...');
        await page.goto('/personal');
        await page.waitForLoadState('networkidle');
        console.log('üìç Personal URL:', page.url());
        await page.screenshot({ path: 'modulo-personal.png', fullPage: true });

        // Explorar asignaciones
        console.log('üìã Navegando a m√≥dulo de asignaciones...');
        await page.goto('/asignaciones-obra');
        await page.waitForLoadState('networkidle');
        console.log('üìç Asignaciones URL:', page.url());
        await page.screenshot({ path: 'modulo-asignaciones.png', fullPage: true });

        // Explorar mantenimientos
        console.log('üîß Navegando a m√≥dulo de mantenimientos...');
        await page.goto('/mantenimientos');
        await page.waitForLoadState('networkidle');
        console.log('üìç Mantenimientos URL:', page.url());
        await page.screenshot({ path: 'modulo-mantenimientos.png', fullPage: true });

        console.log('üéØ Exploraci√≥n completa! Todas las capturas guardadas.');
    });

    test('Crear veh√≠culo nuevo', async ({ page }) => {
        // Login
        await page.goto('/login');
        await page.fill('input[name="email"]', 'admin@petrotekno.com');
        await page.fill('input[name="password"]', 'password');
        await page.click('button[type="submit"]');
        await page.waitForLoadState('networkidle');

        // Ir a veh√≠culos
        await page.goto('/vehiculos');
        await page.waitForLoadState('networkidle');

        console.log('üöó Intentando crear un veh√≠culo nuevo...');

        // Buscar bot√≥n de crear/agregar
        const createButtons = [
            'button:has-text("Agregar")',
            'button:has-text("Nuevo")',
            'button:has-text("Crear")',
            'a:has-text("Agregar")',
            'a:has-text("Nuevo")',
            'a:has-text("Crear")',
            '.btn-primary',
            '[data-modal-target]',
            '#agregarVehiculoBtn'
        ];

        for (const selector of createButtons) {
            const button = page.locator(selector).first();
            if (await button.isVisible()) {
                console.log(`‚úÖ Encontrado bot√≥n crear: ${selector}`);
                await button.click();
                await page.waitForLoadState('networkidle');
                await page.screenshot({ path: 'formulario-crear-vehiculo.png', fullPage: true });
                break;
            }
        }

        console.log('üì∏ Captura del formulario de crear veh√≠culo guardada');
    });

    test('Sesi√≥n interactiva - mantener navegador abierto', async ({ page }) => {
        console.log('üéÆ SESI√ìN INTERACTIVA INICIADA');
        console.log('====================================');

        // Login autom√°tico
        await page.goto('/login');
        await page.fill('input[name="email"]', 'admin@petrotekno.com');
        await page.fill('input[name="password"]', 'password');
        await page.click('button[type="submit"]');
        await page.waitForLoadState('networkidle');

        console.log('‚úÖ Sesi√≥n iniciada exitosamente');
        console.log('üåê Est√°s en:', page.url());
        console.log('');
        console.log('üöÄ ENLACES R√ÅPIDOS:');
        console.log('- Dashboard: /home');
        console.log('- Veh√≠culos: /vehiculos');
        console.log('- Obras: /obras');
        console.log('- Personal: /personal');
        console.log('- Asignaciones: /asignaciones-obra');
        console.log('- Mantenimientos: /mantenimientos');
        console.log('');
        console.log('‚è∏Ô∏è El navegador permanecer√° abierto...');
        console.log('   Presiona Ctrl+C en la terminal para cerrar');

        // Mantener el test activo para sesi√≥n interactiva
        await page.waitForTimeout(300000); // 5 minutos
    });

});